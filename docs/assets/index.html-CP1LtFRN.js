import{_ as e,c as s,o as a,a as n}from"./app-xGEHsMz_.js";const i={},t=n(`<h3 id="准备工作" tabindex="-1"><a class="header-anchor" href="#准备工作"><span>准备工作</span></a></h3><p>创建postgres用户组及用户，创建数据目录和备份目录，用于Docker数据持久化的目录映射</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>groupadd postgres</span></span>
<span class="line"><span>useradd -g postgres postgres</span></span>
<span class="line"><span>mkdir -p /ssndisk/pgdata/data</span></span>
<span class="line"><span>mkdir -p /ssndisk/pgdata/backup/archivedir</span></span>
<span class="line"><span>mkdir -p /ssndisk/pgdata/backup/data</span></span>
<span class="line"><span>chown -R postgres:postgres /ssndisk/pgdata/data</span></span>
<span class="line"><span>chown -R postgres:postgres /ssndisk/pgdata/backup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建网络" tabindex="-1"><a class="header-anchor" href="#创建网络"><span>创建网络</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>docker network create ssn-network</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如已创建过则不需要重复创建</p></div><h3 id="使用timescale-timescaledb-ha-pg14-latest镜像创建容器并初始化pg的密码" tabindex="-1"><a class="header-anchor" href="#使用timescale-timescaledb-ha-pg14-latest镜像创建容器并初始化pg的密码"><span>使用<code>timescale/timescaledb-ha:pg14-latest</code>镜像创建容器并初始化PG的密码</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>docker run \\</span></span>
<span class="line"><span>-d \\</span></span>
<span class="line"><span>-p 25902:5432 \\</span></span>
<span class="line"><span>-e POSTGRES_PASSWORD=****************** \\</span></span>
<span class="line"><span>-e TZ=Asia/Shanghai \\</span></span>
<span class="line"><span>-v /ssndisk/pgdata/data:/home/postgres/pgdata/data \\</span></span>
<span class="line"><span>-v /ssndisk/pgdata/backup:/home/postgres/pgdata/backup \\</span></span>
<span class="line"><span>--name ssn-pgsql-db \\</span></span>
<span class="line"><span>--network ssn-network \\</span></span>
<span class="line"><span>--restart=always \\</span></span>
<span class="line"><span>--health-cmd=&quot;pg_isready -p 5432&quot; \\</span></span>
<span class="line"><span>--health-interval=10s \\</span></span>
<span class="line"><span>--health-retries=10 \\</span></span>
<span class="line"><span>--health-timeout=5s \\</span></span>
<span class="line"><span>timescale/timescaledb-ha:pg14-latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改pg配置文件" tabindex="-1"><a class="header-anchor" href="#修改pg配置文件"><span>修改PG配置文件</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>vi /ssndisk/pgdata/data/postgresql.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>按需修改最大连接数：<code>max_connections = 500</code></li><li>配置配置PG热备份：<code>wal_level = replica</code></li><li>配置配置PG热备份：<code>archive_mode = on</code></li><li>配置配置PG热备份：<code>archive_command = &#39;cp %p /home/postgres/pgdata/backup/archivedir/%f&#39;</code></li></ul><h3 id="创建数据库新用户并对指定的数据库进行授权" tabindex="-1"><a class="header-anchor" href="#创建数据库新用户并对指定的数据库进行授权"><span>创建数据库新用户并对指定的数据库进行授权</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>CREATE USER usriot WITH PASSWORD &#39;***************&#39;;</span></span>
<span class="line"><span>GRANT ALL PRIVILEGES ON DATABASE iotdb TO usriot;</span></span>
<span class="line"><span>GRANT USAGE ON SCHEMA public TO usriot;</span></span>
<span class="line"><span>GRANT ALL PRIVILEGES ON ALL TABLES in SCHEMA public TO usriot;</span></span>
<span class="line"><span>GRANT ALL PRIVILEGES ON ALL sequences in SCHEMA public TO usriot;</span></span>
<span class="line"><span>GRANT select,insert,update,delete ON ALL TABLES in SCHEMA public TO usriot;</span></span>
<span class="line"><span>GRANT ALL ON SCHEMA public TO usriot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建基础备份" tabindex="-1"><a class="header-anchor" href="#创建基础备份"><span>创建基础备份</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>$ docker exec -it ssn-pgsql-db /bin/bash</span></span>
<span class="line"><span>$ pg_basebackup -D /home/postgres/pgdata/backup/data/20240715 -Ft -Pv -U postgres -W -R</span></span>
<span class="line"><span>Passwrod:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建数据库web管理的容器" tabindex="-1"><a class="header-anchor" href="#创建数据库web管理的容器"><span>创建数据库WEB管理的容器</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>docker run \\</span></span>
<span class="line"><span>-d \\</span></span>
<span class="line"><span>-p 25900:8080 \\</span></span>
<span class="line"><span>--name ssn-adminer \\</span></span>
<span class="line"><span>--network ssn-network \\</span></span>
<span class="line"><span>--restart=always \\</span></span>
<span class="line"><span>adminer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如已创建过则不需要重复创建</p></div><h3 id="web管理" tabindex="-1"><a class="header-anchor" href="#web管理"><span>WEB管理</span></a></h3><p>管理地址: <code>http://ip:25900</code></p>`,20),l=[t];function p(d,c){return a(),s("div",null,l)}const o=e(i,[["render",p],["__file","index.html.vue"]]),m=JSON.parse(`{"path":"/blog/postgresql-for-docker/","title":"基于Docker部署PostgreSQL数据库","lang":"zh-CN","frontmatter":{"title":"基于Docker部署PostgreSQL数据库","author":"荣和智能","createTime":"2024/07/17 17:04:37","permalink":"/blog/postgresql-for-docker/","pageLayout":"doc","tags":["数据库","PostgreSQL","TimeScaleDB"],"description":"准备工作 创建postgres用户组及用户，创建数据目录和备份目录，用于Docker数据持久化的目录映射 创建网络 提示 如已创建过则不需要重复创建 使用timescale/timescaledb-ha:pg14-latest镜像创建容器并初始化PG的密码 修改PG配置文件 按需修改最大连接数：max_connections = 500 配置配置PG热...","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"],["meta",{"property":"og:url","content":"https://www.huimai.tech/blog/postgresql-for-docker/"}],["meta",{"property":"og:site_name","content":"荣和智能"}],["meta",{"property":"og:title","content":"基于Docker部署PostgreSQL数据库"}],["meta",{"property":"og:description","content":"准备工作 创建postgres用户组及用户，创建数据目录和备份目录，用于Docker数据持久化的目录映射 创建网络 提示 如已创建过则不需要重复创建 使用timescale/timescaledb-ha:pg14-latest镜像创建容器并初始化PG的密码 修改PG配置文件 按需修改最大连接数：max_connections = 500 配置配置PG热..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-18T07:59:31.000Z"}],["meta",{"property":"article:author","content":"荣和智能"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"PostgreSQL"}],["meta",{"property":"article:tag","content":"TimeScaleDB"}],["meta",{"property":"article:modified_time","content":"2024-07-18T07:59:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基于Docker部署PostgreSQL数据库\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-18T07:59:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"荣和智能\\"}]}"]]},"headers":[{"level":3,"title":"准备工作","slug":"准备工作","link":"#准备工作","children":[]},{"level":3,"title":"创建网络","slug":"创建网络","link":"#创建网络","children":[]},{"level":3,"title":"使用timescale/timescaledb-ha:pg14-latest镜像创建容器并初始化PG的密码","slug":"使用timescale-timescaledb-ha-pg14-latest镜像创建容器并初始化pg的密码","link":"#使用timescale-timescaledb-ha-pg14-latest镜像创建容器并初始化pg的密码","children":[]},{"level":3,"title":"修改PG配置文件","slug":"修改pg配置文件","link":"#修改pg配置文件","children":[]},{"level":3,"title":"创建数据库新用户并对指定的数据库进行授权","slug":"创建数据库新用户并对指定的数据库进行授权","link":"#创建数据库新用户并对指定的数据库进行授权","children":[]},{"level":3,"title":"创建基础备份","slug":"创建基础备份","link":"#创建基础备份","children":[]},{"level":3,"title":"创建数据库WEB管理的容器","slug":"创建数据库web管理的容器","link":"#创建数据库web管理的容器","children":[]},{"level":3,"title":"WEB管理","slug":"web管理","link":"#web管理","children":[]}],"readingTime":{"minutes":1.3,"words":390},"git":{"updatedTime":1721289571000,"contributors":[{"name":"hellorong","email":"315959139@qq.com","commits":1}]},"autoDesc":true,"filePathRelative":"blog/postgresql-for-docker.md","categoryList":[{"id":"126ac9","sort":10000,"name":"blog"}]}`);export{o as comp,m as data};
